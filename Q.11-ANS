Q11. Check the below given code, if there are any issues, fix them and explain the output

const numbers = [1, 2, 3, 4, 5];
const result = numbers.reduce((acc, num) => {
  if (num % 2 === 0) {
    acc.evens.push(num);
  } else {
acc.odds.push(num);
  }
  return acc;
});
console.log(result);

ANS:
const numbers = [1, 2, 3, 4, 5];

const result = numbers.reduce((acc, num) => {
  if (num % 2 === 0) {
    acc.evens.push(num);
  } else {
    acc.odds.push(num);
  }
  return acc;
}, { evens: [], odds: [] }); // Provide initial value as an empty object

console.log(result);

OUTPUT IS:
{ evens: [2, 4], odds: [1, 3, 5] }

Explanation:

In this code, the reduce() function iterates through the numbers array. For each element in the array, it checks if the number is even (divisible by 2). If it's even, 
the number is added to the evens array in the accumulator object (acc). If it's odd, the number is added to the odds array in the accumulator object.

After iterating through all the elements, the reduce() function returns the final accumulator object with the evens and odds arrays containing the even and odd numbers,
respectively.
